// <auto-generated />
using System;
using Entities.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(BierenDbContext))]
    [Migration("20210317153510_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Bier", b =>
                {
                    b.Property<int>("BierNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Alcohol")
                        .HasColumnType("float");

                    b.Property<int?>("BrouwerNr")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("SoortNr")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BierNr");

                    b.HasIndex("BrouwerNr");

                    b.HasIndex("SoortNr");

                    b.HasIndex("UserId");

                    b.ToTable("Bier");

                    b.HasData(
                        new
                        {
                            BierNr = 1,
                            Alcohol = 5.2000000000000002,
                            BrouwerNr = 1,
                            Naam = "Heineken",
                            SoortNr = 1
                        });
                });

            modelBuilder.Entity("Entities.Models.Brouwer", b =>
                {
                    b.Property<int>("BrouwerNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BrNaam")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Gemeente")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Omzet")
                        .HasColumnType("int");

                    b.Property<short?>("PostCode")
                        .HasColumnType("smallint");

                    b.HasKey("BrouwerNr");

                    b.ToTable("DbBrouwer");

                    b.HasData(
                        new
                        {
                            BrouwerNr = 1,
                            Adres = "ArtoisLaan 1",
                            BrNaam = "Artois",
                            Gemeente = "TestGemeente",
                            Omzet = 10000,
                            PostCode = (short)2500
                        });
                });

            modelBuilder.Entity("Entities.Models.Soort", b =>
                {
                    b.Property<int>("SoortNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SoortNaam")
                        .HasColumnName("Soort")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("SoortNr");

                    b.ToTable("Soort");

                    b.HasData(
                        new
                        {
                            SoortNr = 1,
                            SoortNaam = "Pils"
                        });
                });

            modelBuilder.Entity("Entities.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BierNr")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Familienaam")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Voornaam")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("UserId");

                    b.HasIndex("BierNr");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "jos.deKlos@gmail.com",
                            Familienaam = "De Klos",
                            GeboorteDatum = new DateTime(1974, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Voornaam = "Jos"
                        });
                });

            modelBuilder.Entity("Entities.Models.Bier", b =>
                {
                    b.HasOne("Entities.Models.Brouwer", "Brouwers")
                        .WithMany("Bieren")
                        .HasForeignKey("BrouwerNr");

                    b.HasOne("Entities.Models.Soort", "Soorten")
                        .WithMany("Bieren")
                        .HasForeignKey("SoortNr");

                    b.HasOne("Entities.Models.User", null)
                        .WithMany("FavorieteBieren")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Entities.Models.User", b =>
                {
                    b.HasOne("Entities.Models.Bier", null)
                        .WithMany("Users")
                        .HasForeignKey("BierNr");
                });
#pragma warning restore 612, 618
        }
    }
}
