// <auto-generated />
using System;
using Bieren.DataLayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bieren.DataLayer.Migrations
{
    [DbContext(typeof(BierenDbContext))]
    [Migration("20210115084712_Initieel")]
    partial class Initieel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Bieren.DataLayer.Models.DbBier", b =>
                {
                    b.Property<int>("BierNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double?>("Alcohol")
                        .HasColumnType("float");

                    b.Property<int?>("BrouwerNr")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("SoortNr")
                        .HasColumnType("int");

                    b.HasKey("BierNr")
                        .HasName("PK_Bieren");

                    b.HasIndex("BrouwerNr");

                    b.HasIndex("SoortNr");

                    b.ToTable("DbBier");
                });

            modelBuilder.Entity("Bieren.DataLayer.Models.DbBrouwer", b =>
                {
                    b.Property<int>("BrouwerNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BrNaam")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gemeente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Omzet")
                        .HasColumnType("int");

                    b.Property<short?>("PostCode")
                        .HasColumnType("smallint");

                    b.HasKey("BrouwerNr")
                        .HasName("PK_Brouwers");

                    b.ToTable("DbBrouwer");
                });

            modelBuilder.Entity("Bieren.DataLayer.Models.DbSoort", b =>
                {
                    b.Property<int>("SoortNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Soort")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SoortNr")
                        .HasName("PK_Soorten");

                    b.ToTable("DbSoort");
                });

            modelBuilder.Entity("Bieren.DataLayer.Models.DbUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Familienaam")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("DateTime");

                    b.Property<string>("Voornaam")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK_Users");

                    b.ToTable("DbUser");
                });

            modelBuilder.Entity("DbBierDbUser", b =>
                {
                    b.Property<int>("FavorieteBierenBierNr")
                        .HasColumnType("int");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("FavorieteBierenBierNr", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("DbBierDbUser");
                });

            modelBuilder.Entity("Bieren.DataLayer.Models.DbBier", b =>
                {
                    b.HasOne("Bieren.DataLayer.Models.DbBrouwer", "BrouwerNrNavigation")
                        .WithMany("DbBiers")
                        .HasForeignKey("BrouwerNr")
                        .HasConstraintName("FK_Bieren_Brouwers");

                    b.HasOne("Bieren.DataLayer.Models.DbSoort", "SoortNrNavigation")
                        .WithMany("DbBiers")
                        .HasForeignKey("SoortNr")
                        .HasConstraintName("FK_Bieren_Soorten");

                    b.Navigation("BrouwerNrNavigation");

                    b.Navigation("SoortNrNavigation");
                });

            modelBuilder.Entity("DbBierDbUser", b =>
                {
                    b.HasOne("Bieren.DataLayer.Models.DbBier", null)
                        .WithMany()
                        .HasForeignKey("FavorieteBierenBierNr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bieren.DataLayer.Models.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bieren.DataLayer.Models.DbBrouwer", b =>
                {
                    b.Navigation("DbBiers");
                });

            modelBuilder.Entity("Bieren.DataLayer.Models.DbSoort", b =>
                {
                    b.Navigation("DbBiers");
                });
#pragma warning restore 612, 618
        }
    }
}
